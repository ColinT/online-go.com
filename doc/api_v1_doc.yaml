swagger: "2.0"
info:
  description: "This is a guide to the rest api for the online go server"
  version: "1.0.0"
  title: "Online Go Server Api"
  contact:
    email: "contact@online-go.com"
host: "online-go.com"
basePath: "/api/v1"
schemes:
- "https"
tags:
- name: "Announcements"
  description: "Information related to site announcements and banners"
- name: "Demos and Reviews"
  description: "Information related to demo boards and reviews"
- name: "Games"
  description: "Information related to specific games"
- name: "Groups"
  description: "Information related to the groups"
- name: "Ladders"
  description: "Information related to site ladders"
- name: "Me"
  description: "Information related to the authenticated user"
- name: "Players"
  description: "Information related to users"
- name: "Puzzles"
  description: "Information related to the puzzles"
- name: "Tournaments"
  description: "Information related to tournaments"

paths:

#------announcements------
  /announcements:
    get:
      tags:
       - "Announcements"
      summary: "Get current site announcements"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
  /announcements/history:
    get:
      tags:
       - "Announcements"
      summary: "Get the site announcements history"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"

#------demos and reviews------

  /demos:
    get:
      tags:
      - "Demos and Reviews"
      summary: "get a list of demo boards"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /reviews:
    get:
      tags:
      - "Demos and Reviews"
      summary: "get a list of review boards"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /reviews/{id}:
    get:
      tags:
      - "Demos and Reviews"
      summary: "get information about a review or demo board"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The review ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /reviews/{id}/sgf:
    get:
      tags:
      - "Demos and Reviews"
      summary: "get sgf file of a review or demo board"
      produces:
        - sgf
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The review ID.
        - in: query
          name: without-comments
          required: false
          type: integer
          minimum: 0
          description: Whether to download the chat comments with the review (doesn't affect review comments on nodes).
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
        "500":
          description: "Server Error"

#------games------

  /games/{id}:
    get:
      tags:
      - "Games"
      summary: "get information about a game of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The game ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"

  /games/{id}/png:
    get:
      tags:
      - "Games"
      summary: "get png file current state of the game"
      produces:
        - image/png
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The game ID.
        - in: query
          name: without-comments
          required: false
          type: integer
          minimum: 0
          description: Whether to download the chat comments with the review (doesn't affect review comments on nodes).
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
        "500":
          description: "Server Error"


  /games/{id}/reviews:
    get:
      tags:
      - "Games"
      summary: "get list of reviews of a game"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The game ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /games/{id}/sgf:
    get:
      tags:
      - "Games"
      summary: "get sgf file of a game"
      produces:
        - sgf
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The game ID.
        - in: query
          name: without-comments
          required: false
          type: integer
          minimum: 0
          description: Whether to download the chat comments with the review (doesn't affect review comments on nodes).
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
        "500":
          description: "Server Error"

#------me------
  /me:
    get:
      tags:
       - "Me"
      summary: "User ratings table, username, id"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/account_settings:
    get:
      tags:
       - "Me"
      summary: "user details from profile page"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/blocks:
    get:
      tags:
       - "Me"
      summary: "list of blocked users"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/challenges:
    get:
      tags:
       - "Me"
      summary: "list of open challenges"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/friends:
    get:
      tags:
       - "Me"
      summary: "list of added friends"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/games:
    get:
      tags:
       - "Me"
      summary: "list of user's games"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"
          
  /me/groups:
    get:
      tags:
       - "Me"
      summary: "list of user's joined groups"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"
          
  /me/ladders:
    get:
      tags:
       - "Me"
      summary: "list of user's joined ladders"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

  /me/settings:
    get:
      tags:
       - "Me"
      summary: "settings, notifications, account linkages"
      produces:
        - application/json
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"

#------players------
  /players/{id}:
    get:
      tags:
      - "Players"
      summary: "get players information by id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /players/{id}/challenge:
    post:
      tags:
      - "Players"
      summary: "challenge player of a given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "401":
          description: "Unauthorized"
          
  /players/{id}/full:
    get:
      tags:
      - "Players"
      summary: "get player information including ladders, trophies, groups and active games"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"

  /players/{id}/games:
    get:
      tags:
      - "Players"
      summary: "get the game history from player of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /players/{id}/groups:
    get:
      tags:
      - "Players"
      summary: "get the groups joined from player of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /players/{id}/icon:
    get:
      tags:
      - "Players"
      summary: "get the icon of a player of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"

  /players/{id}/ladders:
    get:
      tags:
      - "Players"
      summary: "get the ladders joined from player of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /players/{id}/tournaments:
    get:
      tags:
      - "Players"
      summary: "get the tournaments joined from player of given id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
#------tournaments------

  /tournaments/{id}:
    get:
      tags:
      - "Tournaments"
      summary: "get tournament information by id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
          
  /tournaments/{id}/players:
    get:
      tags:
      - "Tournaments"
      summary: "get tournament players information by using tournament id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"

  /tournaments/{id}/rounds:
    get:
      tags:
      - "Tournaments"
      summary: "get tournament rounds information by using tournament id"
      produces:
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          type: integer
          minimum: 1
          description: The tournament ID.
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not Found"
